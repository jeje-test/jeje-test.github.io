/**
 * üìå QR Code Scanner App
 * Version : 1.1.1
 * Auteur : [Ton Nom]
 * Mise √† jour : 2025-03-14
 */

document.addEventListener("DOMContentLoaded", function () {
    console.log("üöÄ Script charg√© (Version 1.1.1)");

    const startScanBtn = document.getElementById("startScan");
    const stopScanBtn = document.getElementById("stopScan");
    const fetchDataBtn = document.getElementById("fetchData");
    const scannerContainer = document.getElementById("scannerContainer");
    const dataContainer = document.getElementById("dataContainer");

    let scanner;
    const scriptURL = "https://script.google.com/macros/s/AKfycbwigngwYHN6bR5pnRIr4wsk8egM2JrFailsv3IFfQYiSTbU-FZUdLFCF-xZudMdvVzS/exec"; // ‚úÖ URL correcte

    // üì∏ D√©marrer le scanner QR Code
    startScanBtn.addEventListener("click", () => {
        console.log("üì∏ D√©marrage du scanner...");
        scannerContainer.style.display = "block";
        scanner = new Html5Qrcode("reader");

        // üîç R√©cup√©ration des cam√©ras disponibles
        Html5Qrcode.getCameras().then(devices => {
            if (devices.length > 0) {
                // üì∑ S√©lection de la cam√©ra arri√®re par d√©faut
                const backCamera = devices.find(device => device.label.toLowerCase().includes("back")) || devices[0];
                const cameraId = backCamera.id;

                console.log("‚úÖ Cam√©ra s√©lectionn√©e :", backCamera.label);

                scanner.start(
                    cameraId,
                    { fps: 10, qrbox: 250 },
                    (decodedText) => {
                        console.log("‚úÖ QR Code d√©tect√© :", decodedText);
                        alert("‚úÖ QR Code d√©tect√© : " + decodedText);
                        sendToGoogleSheet(decodedText);
                    },
                    (errorMessage) => {
                        console.warn("‚ö†Ô∏è Erreur de scan :", errorMessage);
                    }
                ).then(() => {
                    console.log("üì∏ Scanner lanc√© !");
                }).catch(err => {
                    console.error("‚ùå Erreur lors du d√©marrage du scanner :", err);
                });

            } else {
                console.error("‚ùå Aucune cam√©ra d√©tect√©e !");
                alert("‚ùå Aucune cam√©ra d√©tect√©e !");
            }
        }).catch(err => {
            console.error("‚ùå Erreur lors de la r√©cup√©ration des cam√©ras :", err);
            alert("‚ùå Impossible d'acc√©der aux cam√©ras !");
        });
    });

    // ‚ùå Arr√™ter le scanner
    stopScanBtn.addEventListener("click", () => {
        if (scanner) {
            scanner.stop().then(() => {
                console.log("üì¥ Scanner arr√™t√© !");
                scannerContainer.style.display = "none";
            }).catch(err => console.error("‚ùå Erreur lors de l'arr√™t du scanner :", err));
        }
    });

    // üì§ Envoyer les donn√©es √† Google Sheets
    function sendToGoogleSheet(qrCodeMessage) {
        console.log("üì§ Envoi des donn√©es √† Google Sheets...");
        const formData = new FormData();
        formData.append("data", qrCodeMessage);

        fetch(scriptURL, {
            method: "POST",
            body: formData
        })
        .then(response => response.text())
        .then(data => {
            console.log("‚úÖ R√©ponse Google Sheet :", data);
            alert("üì§ Scan envoy√© avec succ√®s !");
        })
        .catch(error => {
            console.error("‚ùå Erreur lors de l'envoi des donn√©es :", error);
            alert("‚ùå Erreur lors de l'envoi des donn√©es !");
        });
    }

    // üìä R√©cup√©rer les donn√©es de Google Sheets
    fetchDataBtn.addEventListener("click", () => {
        console.log("üì• R√©cup√©ration des donn√©es...");
        fetch(`${scriptURL}?action=getData`)
            .then(response => response.json())
            .then(data => {
                console.log("‚úÖ Donn√©es re√ßues :", data);
                dataContainer.innerHTML = data.length ? data.map(row => `<p>${row}</p>`).join("") : "Aucune donn√©e trouv√©e.";
            })
            .catch(error => {
                console.error("‚ùå Erreur lors de la r√©cup√©ration des donn√©es :", error);
                dataContainer.innerHTML = "‚ùå Erreur lors de la r√©cup√©ration des donn√©es.";
            });
    });
});
